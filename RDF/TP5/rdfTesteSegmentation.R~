# -----------------------------------------------------------------------
# Extraction d'attributs de pixels pour la classification,
# Module RdF, reconnaissance de formes
# Copyleft (C) 2014, Universite Lille 1
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# -----------------------------------------------------------------------

# Chargement des fonctions externes
library ("EBImage")
source ("rdfSegmentation.R")

# Chargement d'une image
nom <- "rdf-2-classes-texture-0.png"
image <- rdfReadGreyImage (nom)

# Calcul et affichage de son histogramme
#nbins <- 512
#h <- hist (as.vector (image), breaks = seq (0, 1, 1 / nbins))

# Segmentation par binarisation
#seuil <- 0.5
#binaire <- (image - seuil) >= 0

# Affichage des deux images
#if (interactive ()) {
#  display (image, nom)
#  display (binaire, "image binaire")
#}


################### A revoir
#nbins <- 256

#nom <- "rdf-2-classes-texture-4.png"
#image <- rdfReadGreyImage (nom)
#seuil <- 0.45
#binaire <- (image - seuil)>= 0##
#display (binaire, "image binaire")


#nom <- "rdf-masque-ronds.png"
#image <- rdfReadGreyImage (nom)
#a <-abs(binaire-image)
#display (a, "image binaire")


################### A revoir
#nbins <- 256
#nom <- "rdf-masque-ronds.png"
#ref <- rdfReadGreyImage (nom)

#nom <- "rdf-2-classes-texture-0.png"
#image <- rdfReadGreyImage (nom)
#image <- rdfTextureEcartType(image, 2)
#seuil <- 0.45
#binaire <- (seuil-image)<= 0
#print(sum(abs(ref-binaire))/16384*100)

#nom <- "rdf-2-classes-texture-1.png"
#image <- rdfReadGreyImage (nom)
#image <- rdfTextureEcartType(image, 2)
#seuil <- 0.3
#binaire <- (seuil-image)>= 0
#print(sum(abs(ref-binaire))/16384*100)

#nom <- "rdf-2-classes-texture-2.png"
#image <- rdfReadGreyImage (nom)
#image <- rdfTextureEcartType(image, 2)
#seuil <- 0.43
#binaire <- (seuil-image)>= 0
#print(sum(abs(ref-binaire))/16384*100)

#nom <- "rdf-2-classes-texture-3.png"
#image <- rdfReadGreyImage (nom)
#image <- rdfTextureEcartType(image, 2)
#seuil <- 0.35
#binaire <- (seuil-image)>= 0
#print(sum(abs(ref-binaire))/16384*100)

#nom <- "rdf-2-classes-texture-4.png"
#image <- rdfReadGreyImage (nom)
#image <- rdfTextureEcartType(image, 2)
#seuil <- 0.3
#binaire <- (seuil-image)>= 0
#print(sum(abs(ref-binaire))/16384*100)

#PART 4


nom <- "rdf-2-classes-texture-3.png"
image <- rdfReadGreyImage (nom)

image2 <- rdfTextureEcartType (image, 2)
# Calcul et affichage de son histogramme
nbins <- 256
histo <- rdfCalculeHistogramme2D(image, nbins, image2, nbins)

display(histo, "histogramme 2D")
