// Une macro-squelette calculer OTSU.
// Version: 0.1
// Date: sept 2010
// Author: L. Macaire
 
macro "modification_saturation" {

	image = getImageID();

	W = getWidth();
	H = getHeight();

	run("Duplicate...", "title=binarisee");
	image_binaire = getImageID();
	run("Split Channels");


	////////////////////////////////////////// ICI TRIAL MODE
	// Ici on calcul les 2 seuils sur l'image verte
	
	print ("Initialisation du Trial-mode ...");
	selectWindow("binarisee (green)");
	getHistogram (level,histo,256);

	omega1 = 0;
	somme1 = 0;
	mu1 = 0;

	omega2 = 0;
	somme2 = 0;
	mu2 = 0;

	omega3 = 0;
	somme3 = 0;
	mu3 = 0;

	max_sigma_between = -1;

	seuil1 = 255;
	seuil2 = 255;
	seuil3 = 255;

	print ("Calcul du trial-mode...");

	for(t2 = 2; t2 <255; t2++) {
		for(t1 = 0; t1 < t2-1; t1++) {
			omega1 = 0;
			somme1 = 0;

			omega2 = 0;
			somme2 = 0;

			omega3 = 0;
			somme3 = 0;

			for(i=0; i<t1; i++) {
				omega1 = omega1 + histo[i];
				somme1 = somme1 +  histo[i] * i;
			}
			for(i=t1; i<t2; i++) {
				omega2 = omega2 + histo[i];
				somme2 = somme2 +  histo[i] * i;
			}
			for(i=t2; i<255; i++) {
				omega3 = omega3 + histo[i];
				somme3 = somme3 +  histo[i] * i;
			}

			if (omega1 * omega2 * omega3 !=0) {
				mu1 = somme1/omega1;
				mu2 = somme2/omega2;
				mu3 = somme3/omega3;

				sigma_between1 = omega1 * omega2 *( mu1 - mu2) * ( mu1 - mu2);
				sigma_between2 = omega2 * omega3 *( mu3 - mu2) * ( mu3 - mu2);
				sigma_between3 = omega1 * omega3 *( mu1 - mu3) * ( mu1 - mu3);
				sigma_between = sigma_between1 + sigma_between2 + sigma_between3;

				if (max_sigma_between == -1) {
					max_sigma_between = sigma_between;
				} 			
				
				if (sigma_between > max_sigma_between) {
					seuil1 = t1;
					seuil2 = t2;
					max_sigma_between = sigma_between;
				}
			}	
		}
	}

	
	
	////////////////////////////////////////// ICI DUAL MODE
	// on calcul le seuil de l'image rouge

	print ("Initialisation du Dual-mode...");
	selectWindow("binarisee (red)");
	omega1=0;
	somme1=0;
	for ( i =0 ; i< 255; i++) {
		omega1=histo[i]+ omega1;
		somme1=i*histo[i]+ somme1;
	}
	mu1 = somme1/omega1;
	somme2 = 0;
	omega2= histo[255];
	mu2=255;
	max_sigma_between = omega1 * omega2 * ( mu1 - mu2) * (mu1 - mu2);

	print ("Calcul du Dual-mode ...");
	for (val = 1; val <255;val++) {
		i = 255 -val;	
		omega1 = omega1 - histo[i];
		omega2 = omega2 + histo[i];
		somme1 = somme1 -  histo[i] * i;
		somme2 = somme2 +  histo[i] * i;
		
		if (omega1 * omega2 !=0) {
			mu1 = somme1/omega1;
			mu2 = somme2/omega2;	
			sigma_between = omega1 * omega2 * ( mu1 - mu2) * (mu1 - mu2);	
			if (sigma_between > max_sigma_between) {
				seuil3 = i;
				max_sigma_between = sigma_between;
			}

		}
	}
	// Nos valeurs de seuil 
	print ("seuil trial 1=",seuil1);
	print ("seuil trial 2=",seuil2);
	print ("seuil dual =",seuil3);


	
	////////////////////////////////////////// ICI RENDU FINAL
	print ("Calcul du rendu final ...");

	//Sauvegarde dans des tableaux pour eviter les switch de fenetre pour le getPixel
	redValue=newArray(W*H);
	selectWindow("binarisee (red)");
	for (x = 0; x<W; x++) {
		for (y = 0; y<H; y++) {
			redValue[(x*W)+y] = getPixel(x,y);
		}
	}
	greenValue=newArray(W*H);
	selectWindow("binarisee (green)");
	for (x = 0; x<W; x++) {
		for (y = 0; y<H; y++) {
			greenValue[(x*W)+y] = getPixel(x,y);
		}
	}

	// Ici on construit la nouvelle image (que je fais dans la Blue). 
	selectWindow("binarisee (blue)");
	for (x = 0; x<W; x++) {
		for (y = 0; y<H; y++) {
				
			red = redValue[(x*W)+y];
			green = greenValue[(x*W)+y];
			
			if (red<seuil3) {
				if (green<seuil1) {
					setPixel(x,y,256/6*1);				
				} else if (green<seuil2) {
					setPixel(x,y,256/6*2);			
				} else {
					setPixel(x,y,256/6*3);				
				}
			} else {
				if (green<seuil1) {
					setPixel(x,y,256/6*4);					
				} else if (green<seuil2) {
					setPixel(x,y,256/6*5);				
				} else {
					setPixel(x,y,256/6*6);				
				}
			} 
			
		}

	}
	
	// Ici je close et rename la blue
	selectWindow("binarisee (green)");
	close();
	selectWindow("binarisee (red)");
	close();
	selectWindow("binarisee (blue)");
	rename("Segmentation-6_classe_RGB.tif");
	print ("Finit !");

}

Dialog.create("Fin");
Dialog.addMessage(" Cliquer sur OK pour terminer le traitement sur la saturation");
Dialog.show();


}
